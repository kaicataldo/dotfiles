#!/usr/bin/env bash

# Create and report creation of directories if they don't exist
create_dir() {
  if [ ! -e $1 ]; then
    mkdir $1
    echo "$1 directory created."
  elif [ ! -d $1 ]; then
    echo "$1 already exists but is not a directory."
    exit 1
  fi
}

# Symlink and report creation of link
create_symlink() {
  ln -sfn $1 $2
  echo "Symlinked $1 to $2."
}

# Warn user this script will overwrite current dotfiles
while true; do
  read -p "Warning: this will overwrite your current dotfiles. Continue? [y/n] " yn
  case $yn in
    [Yy]* ) break ;;
    [Nn]* ) exit 0 ;;
    * ) echo "Please answer yes or no." ;;
  esac
done

# Get the dotfiles directory's absolute path
DOTFILES_DIR="$(cd "$(dirname "$0")"; cd ..; pwd -P)"

echo
echo "Creating directories for Vim..."
create_dir $HOME/.vim
create_dir $HOME/.vim/autoload
create_dir $HOME/.vim/backup
create_dir $HOME/.vim/swp
create_dir $HOME/.vim/undo
create_dir $HOME/.config

echo
echo "cURLing vim-plug"

# https://github.com/junegunn/vim-plug#vim
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

echo
echo "Symlinking dotfiles..."

# bash
create_symlink $DOTFILES_DIR/bash/.bashrc $HOME/.bashrc
create_symlink $DOTFILES_DIR/bash/.bash_profile $HOME/.bash_profile

# Git
create_symlink $DOTFILES_DIR/git/.gitconfig $HOME/.gitconfig
create_symlink $DOTFILES_DIR/git/.gitignore_global $HOME/.gitignore_global

# Vim
create_symlink $DOTFILES_DIR/vim/.vimrc $HOME/.vimrc

# Neovim
create_symlink $HOME/.vim $HOME/.config/nvim
create_symlink $HOME/.vimrc $HOME/.config/nvim/init.vim

# tmux
create_symlink $DOTFILES_DIR/tmux/.tmux.conf $HOME/.tmux.conf

echo
echo "Bootstrapping complete."
exit 0
